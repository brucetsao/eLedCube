C51 COMPILER V9.52.0.0   DISPLAY_FIGURE                                                    07/28/2014 21:01:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DISPLAY_FIGURE
OBJECT MODULE PLACED IN .\HEX\display_figure.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE display_figure.c DEBUG OBJECTEXTEND TABS(2) OBJECT(.\HEX\display_figure.obj
                    -)

line level    source

   1          #include "display_figure.h"
   2          #include "Time.h"
   3          
   4          /**********************************************************************************************
   5          函数名：数字模式函数
   6          调  用：无
   7          参  数：无
   8          返回值：无
   9          结  果：
  10          备  注：
  11          /*********************************************************************************************/
  12          void display_figure()
  13          {
  14   1        uchar temp;
  15   1        time_refurbish();
  16   1        if(Time0_flag)
  17   1          {
  18   2          Time0_flag=0;
  19   2          temp=T0_S-1;
  20   2          P2=P0=0xff;
  21   2          dis_close();
  22   2          if(temp<=180)
  23   2          {
  24   3            if((temp>=0)&&(temp<32))      //显示5678位置；
  25   3            { //OE_595=1;
  26   4              //dat1=~zhifu[disp_time[(4-(T0_S/8))]][(7-(T0_S%8))*2];
  27   4                //dat2=~zhifu[disp_time[(4-(T0_S/8))]][(7-(T0_S%8))*2+1];
  28   4              dat1=~zhifu[disp_time[(5+(temp/8))]][((temp%8))*2];  
  29   4                dat2=~zhifu[disp_time[(5+(temp/8))]][((temp%8))*2+1];
  30   4              dat3=0xff;dat4=0xff;
  31   4              //display(dat1,dat2,dat3,dat4); display_CLR();
  32   4              }
  33   3              else if((temp>147)&&(temp<180))// 显示1234位置；
  34   3              { 
  35   4              dat1=~zhifu[disp_time[(4-(179-temp)/8)]][(7-((179-temp)%8))*2];
  36   4                dat2=~zhifu[disp_time[(4-(179-temp)/8)]][(7-((179-temp)%8))*2+1];
  37   4              dat3=0xff;dat4=0xff;
  38   4              //display(dat1,dat2,dat3,dat4);  display_CLR();
  39   4            }
  40   3            else if((temp>57)&&(temp<90)) //显示9、10、11、12位置；
  41   3            { 
  42   4              dat2=~zhifu1[disp_time[(12-((89-temp)/8))]][(((89-temp)%8))*2];
  43   4                dat1=~zhifu1[disp_time[(12-((89-temp)/8))]][(((89-temp)%8))*2+1];
  44   4              dat3=0xff;dat4=0xff;
  45   4              //display(dat1,dat2,0xdf,dat4); display_CLR();
  46   4              }
  47   3              else if((temp>=90)&&(temp<122))//显示13、14、15、16位置；
  48   3            {
  49   4              dat2=~zhifu1[disp_time[(16-((121-temp)/8))]][(((121-temp)%8))*2];    //必须拆分成两个32字符
  50   4                dat1=~zhifu1[disp_time[(16-((121-temp)/8))]][(((121-temp)%8))*2+1];
  51   4              dat3=0xff;dat4=0xff;
  52   4              //display(dat1,dat2,0xdf,dat4);  display_CLR();
  53   4              }
  54   3              else if((temp>=32)&&(temp<=57))//显示13、14、15、16位置；
C51 COMPILER V9.52.0.0   DISPLAY_FIGURE                                                    07/28/2014 21:01:31 PAGE 2   

  55   3            { 
  56   4              dat1=0xff;dat2=0xff;dat3=0xff;dat4=0xff;
  57   4              //display(0xff,0xff,0xdf,0xff);  display_CLR();
  58   4              }
  59   3              else if((temp>=122)&&(temp<=147))//显示13、14、15、16位置；
  60   3            { 
  61   4              dat1=0xff;dat2=0xff;dat3=0xff;dat4=0xff;
  62   4              //display(0xff,0xff,0xdf,0xff); display_CLR();
  63   4              } 
  64   3            dat5=pov_hz[line_now][0];
  65   3              dat6=pov_hz[line_now][1];
  66   3               LED1=0;LED0=0; 
  67   3             Send_data_A(dat1,dat2);
  68   3             //Send_data_B(dat1);
  69   3             Send_data_B(dat5,dat6);
  70   3             dis_open(); 
  71   3             P2=dat3;
  72   3             P0=dat4;
  73   3             delay();
  74   3             LED0=1;  LED1=1;
  75   3             P0=P2=0xff;
  76   3             dis_close(); 
  77   3          }
  78   2        }
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    625    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
