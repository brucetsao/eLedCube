C51 COMPILER V9.52.0.0   DS1302                                                            07/28/2014 21:01:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\HEX\ds1302.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ds1302.c DEBUG OBJECTEXTEND TABS(2) OBJECT(.\HEX\ds1302.obj)

line level    source

   1          
   2          /*****************************************************************************
   3           头文件
   4           *****************************************************************************/
   5          //#include <STC11F60XE.h>
   6          #include  "ds1302.h"
   7                              //秒    分    时    日    月  星期    年
   8          //uchar code init[] = {0x00, 0x00, 0x20, 0x01, 0x01, 0x05, 0x10};
   9          //uchar data now[7];
  10          uchar xdata disp_time[19]; 
  11          /******************************************************************************
  12          函数功能: 1302驱动
  13          入口参数:   
  14          出口参数: 
  15          ******************************************************************************/
  16          
  17          //DS1302写入数据（底层协议）
  18          void write_clock(uchar ord, uchar dd)
  19              {
  20   1        clock_clk=0;
  21   1        clock_Rst=0;
  22   1        clock_Rst=1;
  23   1        clock_out(ord);
  24   1        clock_out(dd);
  25   1        clock_Rst=0;
  26   1        clock_clk=1;
  27   1        }
  28          //DS1302写入字节（底层协议）
  29          uchar clock_in(void)
  30            {
  31   1        clock_dat=1;            ACC0=clock_dat;
  32   1        clock_clk=1; clock_clk=0; ACC1=clock_dat;
  33   1        clock_clk=1; clock_clk=0; ACC2=clock_dat;
  34   1        clock_clk=1; clock_clk=0; ACC3=clock_dat;
  35   1        clock_clk=1; clock_clk=0; ACC4=clock_dat;
  36   1        clock_clk=1; clock_clk=0; ACC5=clock_dat;
  37   1        clock_clk=1; clock_clk=0; ACC6=clock_dat;
  38   1        clock_clk=1; clock_clk=0; ACC7=clock_dat;
  39   1        return(ACC);
  40   1        }
  41          //DS1302读取数据（底层协议）
  42          uchar read_clock(uchar ord)
  43            {
  44   1        uchar dd=0;
  45   1        clock_clk=0;
  46   1        clock_Rst=0;
  47   1        clock_Rst=1;
  48   1        clock_out(ord);
  49   1        dd=clock_in();
  50   1        clock_Rst=0;
  51   1        clock_clk=1;
  52   1        return(dd);
  53   1      }
  54          void clock_out(uchar dat)
  55          {
C51 COMPILER V9.52.0.0   DS1302                                                            07/28/2014 21:01:31 PAGE 2   

  56   1        ACC=dat;
  57   1        clock_dat=ACC0; clock_clk=1; clock_clk=0;
  58   1        clock_dat=ACC1; clock_clk=1; clock_clk=0;
  59   1        clock_dat=ACC2; clock_clk=1; clock_clk=0;
  60   1        clock_dat=ACC3; clock_clk=1; clock_clk=0;
  61   1        clock_dat=ACC4; clock_clk=1; clock_clk=0;
  62   1        clock_dat=ACC5; clock_clk=1; clock_clk=0;
  63   1        clock_dat=ACC6; clock_clk=1; clock_clk=0;
  64   1        clock_dat=ACC7; clock_clk=1; clock_clk=0;
  65   1      }
  66          //************设置1302的初始时间*****************/
  67          void Init_1302(void) //
  68          {  /*if(read_clock(0xc1) != 0x54)
  69   1        {
  70   1        write_clock(0x8e,0x00);//允许写操作
  71   1        write_clock(0x8c,0x10);//年
  72   1        write_clock(0x8a,0x03);//星期
  73   1        write_clock(0x88,0x11);//月
  74   1        write_clock(0x86,0x24);//日
  75   1        write_clock(0x84,0x07);//小时
  76   1        write_clock(0x82,0x57);//分钟
  77   1        write_clock(0x80,0x00);//秒
  78   1        write_clock(0x90,0xb5);//充电
  79   1        write_clock(0xc0,0x54);//写入初始化标志RAM（第00个RAM位置）
  80   1        write_clock(0x8e,0x80);//禁止写操作 
  81   1        }
  82   1        write_clock(0x8e,0x00);//允许写操作
  83   1        write_clock(0x8e,0x80);//禁止写操作  */
  84   1        
  85   1         write_clock(0x8e,0x00);   //允许写操作
  86   1         write_clock(0x84,0xa0);   //允许写操作
  87   1         write_clock(0x8c,0x13);   //年
  88   1         write_clock(0x8a,0x07);   //星期
  89   1         write_clock(0x88,0x11);   //月
  90   1         write_clock(0x86,0x28);   //日
  91   1         write_clock(0x84,0x10);   //小时
  92   1         write_clock(0x82,0x23);   //分钟
  93   1         write_clock(0x80,0x30);   //秒
  94   1        //write_clock(0x80,0x80);   //秒
  95   1         write_clock(0x90,0xa5);   //充电 
  96   1         write_clock(0x8e,0x80);   //禁止写操作 
  97   1      }
  98          /****************************************************************
  99          函数名：第一次读取时间函数
 100          调  用：time_first_read();
 101          参  数：无
 102          返回值：无
 103          结  果：
 104          备  注：；
 105          /****************************************************************/
 106          void time_first_read()
 107          {
 108   1        minute=read_clock(0x83);
 109   1        minute=minute%16+minute/16*10;
 110   1        hour=read_clock(0x85);
 111   1        hour=hour%16+hour/16*10;
 112   1        if(hour>11)
 113   1        {
 114   2          hour=hour-12;
 115   2        }   
 116   1      }
 117          
C51 COMPILER V9.52.0.0   DS1302                                                            07/28/2014 21:01:31 PAGE 3   

 118          //===============显示刷新子程序==================
 119          void time_refurbish() 
 120          {
 121   1      /*
 122   1        ss=read_clock(0x81);   //读秒
 123   1        ss=ss%16+ss/16*10;
 124   1        if(ss==0)//秒=0时读分
 125   1        {
 126   1          mm=read_clock(0x83);
 127   1          mm=mm%16+mm/16*10;
 128   1        }
 129   1        if(mm==0)//分=0时读小时；
 130   1        {
 131   1          hh=read_clock(0x85);
 132   1            hh=hh%16+hh/16*10;
 133   1          if(hh>11)
 134   1          {
 135   1            hh=hh-12;
 136   1          }
 137   1        }
 138   1          
 139   1        day = read_clock(0x87);   //日
 140   1        day=day%16+dd/16*10;
 141   1        month = read_clock(0x89);   //月
 142   1        month=month%16+month/16*10;
 143   1        week = read_clock(0x8b);   //星期
 144   1        week=week%16+week/16*10;
 145   1        year = read_clock(0x8d);   //年
 146   1        year=year%16+year/16*10;
 147   1        */
 148   1        if(time_refurbish_flag)
 149   1        {
 150   2          time_refurbish_flag=0;
 151   2      
 152   2          second=read_clock(0x81);   //读秒
 153   2          second=second%16+second/16*10;
 154   2          if(second==0)//秒=0时读分
 155   2          {
 156   3            minute=read_clock(0x83);
 157   3            minute=minute%16+minute/16*10;
 158   3          }
 159   2          if(minute==0)//分=0时读小时；
 160   2          {
 161   3            hour=read_clock(0x85);
 162   3              hour=hour%16+hour/16*10;
 163   3            if(hour>11)
 164   3            {
 165   4              hour=hour-12;
 166   4            }
 167   3          } 
 168   2          day = read_clock(0x87);     //日
 169   2          day=day%16+day/16*10;
 170   2          month = read_clock(0x89);   //月
 171   2          month=month%16+month/16*10;
 172   2          week = read_clock(0x8b);    //星期
 173   2          week=week%16+week/16*10;
 174   2          year = read_clock(0x8d);    //年
 175   2          year=year%16+year/16*10;
 176   2          //disp_time[1] = speedsum/10;   //电机速度
 177   2            //disp_time[2] = speedsum%10;   //电机速度
 178   2          disp_time[1] = hour/10;   //小时
 179   2            disp_time[2] =hour%10;   //小时
C51 COMPILER V9.52.0.0   DS1302                                                            07/28/2014 21:01:31 PAGE 4   

 180   2          disp_time[3] = 10;   //小时
 181   2          disp_time[4] =minute/10;   //读取分钟数据
 182   2            disp_time[5] =minute%10;   //读取分钟数据 
 183   2          disp_time[6] =10;  
 184   2          disp_time[7] =second/10;   //读取秒数据
 185   2            disp_time[8] =second%10;   //读取秒数据
 186   2          disp_time[16] = year/10;   //年
 187   2            disp_time[15] = year%10;   //年个位
 188   2            disp_time[14]=10;
 189   2            disp_time[13] =month/10;   //月十位
 190   2            disp_time[12] =month%10;   //月个位
 191   2            disp_time[11]=10;
 192   2            disp_time[10] =day/10;   //日十位
 193   2            disp_time[9] =day%10;   //日个位
 194   2        }
 195   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    637    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
